Dec-08 17:07:00.362 [main] DEBUG nextflow.cli.Launcher - Setting HTTP proxy: [www-cache.curie.fr, 3128]
Dec-08 17:07:00.558 [main] DEBUG nextflow.cli.Launcher - Setting http proxy: [www-cache.curie.fr, 3128]
Dec-08 17:07:00.558 [main] DEBUG nextflow.cli.Launcher - $> nextflow run /data/users/cbenoit/Documents/ATACseq/atac-seq/main.nf -profile test -dump-channels IDR,doublegroupedIDR -resume -w /data/users/cbenoit/SAFIR_BREAST_LUNG/work/ --outDir /data/users/cbenoit/SAFIR_BREAST_LUNG/atac_results --skipPeakAnno
Dec-08 17:07:00.628 [main] INFO  nextflow.cli.CmdRun - N E X T F L O W  ~  version 20.01.0
Dec-08 17:07:00.656 [main] INFO  nextflow.cli.CmdRun - Launching `/data/users/cbenoit/Documents/ATACseq/atac-seq/main.nf` [distracted_bassi] - revision: 675e983eac
Dec-08 17:07:00.680 [main] DEBUG nextflow.config.ConfigBuilder - Found config base: /data/users/cbenoit/Documents/ATACseq/atac-seq/nextflow.config
Dec-08 17:07:00.681 [main] DEBUG nextflow.config.ConfigBuilder - Parsing config file: /data/users/cbenoit/Documents/ATACseq/atac-seq/nextflow.config
Dec-08 17:07:00.705 [main] DEBUG nextflow.config.ConfigBuilder - Applying config profile: `test`
Dec-08 17:07:01.579 [main] DEBUG nextflow.config.ConfigBuilder - Available config profiles: [path, cluster, test, multipath, multiconda, conda, singularity, docker]
Dec-08 17:07:01.643 [main] DEBUG nextflow.Session - Session uuid: 119fe8f5-a4fd-4473-bc66-73ec4c0b11ba
Dec-08 17:07:01.643 [main] DEBUG nextflow.Session - Run name: distracted_bassi
Dec-08 17:07:01.643 [main] DEBUG nextflow.Session - Executor pool size: 4
Dec-08 17:07:01.683 [main] DEBUG nextflow.cli.CmdRun - 
  Version: 20.01.0 build 5264
  Created: 12-02-2020 10:14 UTC (11:14 CEST)
  System: Linux 3.10.0-1062.18.1.el7.x86_64
  Runtime: Groovy 2.5.8 on OpenJDK 64-Bit Server VM 11.0.1-internal+0-adhoc..src
  Encoding: UTF-8 (UTF-8)
  Process: 31780@shbli047 [10.2.200.113]
  CPUs: 4 - Mem: 125.6 GB (2.5 GB) - Swap: 0 (0)
Dec-08 17:07:01.737 [main] DEBUG nextflow.Session - Work-dir: /data/users/cbenoit/SAFIR_BREAST_LUNG/work [nfs]
Dec-08 17:07:02.027 [main] DEBUG nextflow.Session - Observer factory: TowerFactory
Dec-08 17:07:02.030 [main] DEBUG nextflow.Session - Observer factory: DefaultObserverFactory
Dec-08 17:07:02.415 [main] DEBUG nextflow.Session - Session start invoked
Dec-08 17:07:02.420 [main] DEBUG nextflow.trace.TraceFileObserver - Flow starting -- trace file: /data/users/cbenoit/SAFIR_BREAST_LUNG/atac_results/summary/trace/trace.txt
Dec-08 17:07:03.679 [main] DEBUG nextflow.script.ScriptRunner - > Launching execution
Dec-08 17:07:03.689 [main] DEBUG nextflow.Session - Workflow process names [dsl1]: checkDesign, macs2, getFragmentSize, workflowSummaryMqc, bigWig, preseq, readsShifting, deepToolsComputeMatrix, genrich, featureCounts, bamSort, multiqc, peakAnnoHomer, getSoftwareVersions, deepToolsFingerprint, bowtie2, outputDocumentation, star, peakQC, prepareAnnotation, bamFiltering, markDuplicates, fastQC, GroupsIDR, bwaMem, ReplicatesIDR
Dec-08 17:07:03.948 [main] INFO  nextflow.Nextflow - ======================================================================
DISCLAIMER

This software is currently under active development and the results 
have been generated with a non stable version.
The reliability, reproducibility and the quality of the results are 
therefore not guaranteed.

/!\ Do not use the results for any kind of projects /!\
======================================================================


Dec-08 17:07:03.951 [main] INFO  nextflow.Nextflow - =======================================================

ATAC-seq v1.0.0dev"
=======================================================
Dec-08 17:07:03.955 [main] INFO  nextflow.Nextflow - Pipeline Name  : ATAC-seq
Pipeline Version: 1.0.0dev
Run Name       : distracted_bassi
Reads          : null
Design         : /data/users/cbenoit/Documents/ATACseq/atac-seq/test/design.csv
Annotation     : /data/annotations/pipelines
Fasta Ref      : /data/annotations/pipelines/Human/hg19/genome/hg19.fa
GTF            : /data/annotations/pipelines/Human/hg19/gtf/gencode.v19.annotation.gtf
Genes          : /data/annotations/pipelines/Human/hg19/gtf/gencode.v19.annotation_proteinCoding_gene.bed
Blacklist      : /data/annotations/pipelines/Human/hg19/ENCODE/ENCFF001TDO_merged.bed
Data Type      : Paired-End
Aligner        : bwa-mem
Max Memory     : 8 GB
Max CPUs       : 4
Max Time       : 2h
Output dir     : /data/users/cbenoit/SAFIR_BREAST_LUNG/atac_results
Working dir    : /data/users/cbenoit/SAFIR_BREAST_LUNG/work
Current home   : /data/users/cbenoit
Current user   : cbenoit
Current path   : /data/users/cbenoit/Documents/ATACseq/atac-seq/bin
Script dir     : /data/users/cbenoit/Documents/ATACseq/atac-seq
Config Profile : test
Dec-08 17:07:03.956 [main] INFO  nextflow.Nextflow - =========================================
Dec-08 17:07:04.175 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.176 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.181 [main] DEBUG nextflow.executor.Executor - [warm up] executor > local
Dec-08 17:07:04.186 [main] DEBUG n.processor.LocalPollingMonitor - Creating local task monitor for executor 'local' > cpus=4; memory=125.6 GB; capacity=4; pollInterval=100ms; dumpInterval=5m
Dec-08 17:07:04.200 [Actor Thread 5] DEBUG nextflow.sort.BigSort - Sort completed -- entries: 3; slices: 1; internal sort time: 0.022 s; external sort time: 0.002 s; total time: 0.024 s
Dec-08 17:07:04.212 [Actor Thread 5] DEBUG nextflow.file.FileCollector - >> temp file exists? true
Dec-08 17:07:04.217 [Actor Thread 5] DEBUG nextflow.file.FileCollector - Retrivied cached collect-files from: /scratch/7010105.torque6.curie.fr/59ee28690bda6517a04a90fe08a6bdb8.collect-file -- cached files: [/data/users/cbenoit/SAFIR_BREAST_LUNG/work/tmp/de/56c75e4dfbb1dfeafd3198d99c8bb2/sample_plan.csv]
Dec-08 17:07:04.230 [Actor Thread 5] DEBUG nextflow.file.FileCollector - Deleting file collector temp dir: /scratch/7010105.torque6.curie.fr/nxf-4611005165282375843
Dec-08 17:07:04.246 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > checkDesign -- maxForks: 4; blocking: false
Dec-08 17:07:04.280 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name fastQC
Dec-08 17:07:04.281 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name fastQC
Dec-08 17:07:04.282 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.282 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.283 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > fastQC -- maxForks: 4; blocking: false
Dec-08 17:07:04.324 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:highCpu` matches label `highCpu` for process with name bwaMem
Dec-08 17:07:04.324 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:highMem` matches label `highMem` for process with name bwaMem
Dec-08 17:07:04.324 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.324 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.327 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > bwaMem -- maxForks: 4; blocking: false
Dec-08 17:07:04.375 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:highCpu` matches label `highCpu` for process with name bowtie2
Dec-08 17:07:04.375 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name bowtie2
Dec-08 17:07:04.376 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.376 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.377 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > bowtie2 -- maxForks: 4; blocking: false
Dec-08 17:07:04.421 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:highCpu` matches label `highCpu` for process with name star
Dec-08 17:07:04.429 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:highMem` matches label `highMem` for process with name star
Dec-08 17:07:04.429 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.429 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.434 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > star -- maxForks: 4; blocking: false
Dec-08 17:07:04.439 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name bamSort
Dec-08 17:07:04.439 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name bamSort
Dec-08 17:07:04.439 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.440 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.441 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > bamSort -- maxForks: 4; blocking: false
Dec-08 17:07:04.449 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name markDuplicates
Dec-08 17:07:04.449 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name markDuplicates
Dec-08 17:07:04.450 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.450 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.451 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > markDuplicates -- maxForks: 4; blocking: false
Dec-08 17:07:04.490 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowCpu` matches label `lowCpu` for process with name preseq
Dec-08 17:07:04.491 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name preseq
Dec-08 17:07:04.491 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.491 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.499 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > preseq -- maxForks: 4; blocking: false
Dec-08 17:07:04.522 [Actor Thread 3] INFO  nextflow.processor.TaskProcessor - [e3/e9158e] Cached process > fastQC (ID1)
Dec-08 17:07:04.522 [Actor Thread 7] INFO  nextflow.processor.TaskProcessor - [00/be3bd3] Cached process > fastQC (ID3)
Dec-08 17:07:04.522 [Actor Thread 6] INFO  nextflow.processor.TaskProcessor - [a6/89ec70] Cached process > fastQC (ID2)
Dec-08 17:07:04.525 [Actor Thread 4] INFO  nextflow.processor.TaskProcessor - [ee/fbdcc5] Cached process > checkDesign (design.csv)
Dec-08 17:07:04.526 [Actor Thread 11] INFO  nextflow.processor.TaskProcessor - [8c/ed9a7f] Cached process > bwaMem (ID2 on hg19)
Dec-08 17:07:04.526 [Actor Thread 9] INFO  nextflow.processor.TaskProcessor - [02/163e77] Cached process > bwaMem (ID1 on hg19)
Dec-08 17:07:04.533 [Actor Thread 12] INFO  nextflow.processor.TaskProcessor - [61/1c0c4f] Cached process > bwaMem (ID3 on hg19)
Dec-08 17:07:04.537 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowCpu` matches label `lowCpu` for process with name bamFiltering
Dec-08 17:07:04.538 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name bamFiltering
Dec-08 17:07:04.538 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.538 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.553 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > bamFiltering -- maxForks: 4; blocking: false
Dec-08 17:07:04.563 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name readsShifting
Dec-08 17:07:04.563 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name readsShifting
Dec-08 17:07:04.564 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.564 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.565 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > readsShifting -- maxForks: 4; blocking: false
Dec-08 17:07:04.590 [Actor Thread 4] DEBUG n.util.BlockingThreadExecutorFactory - Thread pool name=FileTransfer; maxThreads=12; maxQueueSize=36; keepAlive=1m
Dec-08 17:07:04.600 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowCpu` matches label `lowCpu` for process with name getFragmentSize
Dec-08 17:07:04.600 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name getFragmentSize
Dec-08 17:07:04.601 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.601 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.603 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > getFragmentSize -- maxForks: 4; blocking: false
Dec-08 17:07:04.606 [Actor Thread 14] INFO  nextflow.processor.TaskProcessor - [06/365ea2] Cached process > bamSort (ID3)
Dec-08 17:07:04.608 [Actor Thread 15] INFO  nextflow.processor.TaskProcessor - [a0/5872f1] Cached process > bamSort (ID1)
Dec-08 17:07:04.609 [Actor Thread 16] INFO  nextflow.processor.TaskProcessor - [46/d78153] Cached process > bamSort (ID2)
Dec-08 17:07:04.615 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name bigWig
Dec-08 17:07:04.616 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name bigWig
Dec-08 17:07:04.616 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.616 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.617 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > bigWig -- maxForks: 4; blocking: false
Dec-08 17:07:04.626 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name deepToolsComputeMatrix
Dec-08 17:07:04.626 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name deepToolsComputeMatrix
Dec-08 17:07:04.627 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.627 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.630 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > deepToolsComputeMatrix -- maxForks: 4; blocking: false
Dec-08 17:07:04.633 [Actor Thread 13] INFO  nextflow.processor.TaskProcessor - [52/03e005] Cached process > markDuplicates (ID3)
Dec-08 17:07:04.636 [Actor Thread 14] INFO  nextflow.processor.TaskProcessor - [5f/1a2b41] Cached process > markDuplicates (ID2)
Dec-08 17:07:04.654 [Actor Thread 16] INFO  nextflow.processor.TaskProcessor - [24/43d224] Cached process > preseq (ID3)
Dec-08 17:07:04.657 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name deepToolsFingerprint
Dec-08 17:07:04.657 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name deepToolsFingerprint
Dec-08 17:07:04.657 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.658 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.662 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > deepToolsFingerprint -- maxForks: 4; blocking: false
Dec-08 17:07:04.665 [Actor Thread 18] INFO  nextflow.processor.TaskProcessor - [b7/47f315] Cached process > markDuplicates (ID1)
Dec-08 17:07:04.684 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name macs2
Dec-08 17:07:04.685 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name macs2
Dec-08 17:07:04.687 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.687 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.692 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > macs2 -- maxForks: 4; blocking: false
Dec-08 17:07:04.703 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name genrich
Dec-08 17:07:04.703 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name genrich
Dec-08 17:07:04.704 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.704 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.721 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > genrich -- maxForks: 4; blocking: false
Dec-08 17:07:04.721 [Actor Thread 11] INFO  nextflow.processor.TaskProcessor - [9d/fc7deb] Cached process > bamFiltering (ID3)
Dec-08 17:07:04.726 [Actor Thread 16] WARN  nextflow.script.ScriptBinding - Access to undefined parameter `skipShift` -- Initialise it to a default value eg. `params.skipShift = some_value`
Dec-08 17:07:04.754 [Actor Thread 7] INFO  nextflow.processor.TaskProcessor - [04/1129da] Cached process > preseq (ID2)
Dec-08 17:07:04.760 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name peakAnnoHomer
Dec-08 17:07:04.761 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name peakAnnoHomer
Dec-08 17:07:04.761 [Actor Thread 15] INFO  nextflow.processor.TaskProcessor - [23/a7bb06] Cached process > preseq (ID1)
Dec-08 17:07:04.761 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.761 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.762 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > peakAnnoHomer -- maxForks: 4; blocking: false
Dec-08 17:07:04.764 [Actor Thread 16] INFO  nextflow.processor.TaskProcessor - [d4/9fade7] Cached process > readsShifting (ID3)
Dec-08 17:07:04.771 [Actor Thread 13] WARN  nextflow.script.ScriptBinding - Access to undefined parameter `skipGenrichPeakCalling` -- Initialise it to a default value eg. `params.skipGenrichPeakCalling = some_value`
Dec-08 17:07:04.776 [Actor Thread 6] INFO  nextflow.processor.TaskProcessor - [f4/924463] Cached process > bamFiltering (ID2)
Dec-08 17:07:04.791 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name peakQC
Dec-08 17:07:04.791 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name peakQC
Dec-08 17:07:04.792 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.792 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.792 [Actor Thread 8] INFO  nextflow.processor.TaskProcessor - [a9/3b4b89] Cached process > getFragmentSize (ID3)
Dec-08 17:07:04.796 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > peakQC -- maxForks: 4; blocking: false
Dec-08 17:07:04.798 [Actor Thread 10] INFO  nextflow.processor.TaskProcessor - [6c/853077] Cached process > bamFiltering (ID1)
Dec-08 17:07:04.803 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowCpu` matches label `lowCpu` for process with name prepareAnnotation
Dec-08 17:07:04.803 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowMem` matches label `lowMem` for process with name prepareAnnotation
Dec-08 17:07:04.803 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.803 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.804 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > prepareAnnotation -- maxForks: 4; blocking: false
Dec-08 17:07:04.804 [Actor Thread 15] INFO  nextflow.processor.TaskProcessor - [1d/d8bdc6] Cached process > readsShifting (ID2)
Dec-08 17:07:04.822 [Actor Thread 3] INFO  nextflow.processor.TaskProcessor - [14/ecd244] Cached process > readsShifting (ID1)
Dec-08 17:07:04.827 [Actor Thread 7] INFO  nextflow.processor.TaskProcessor - [02/cb66d7] Cached process > bigWig (ID3)
Dec-08 17:07:04.835 [Actor Thread 13] INFO  nextflow.processor.TaskProcessor - [c9/68d170] Cached process > genrich (ID3)
Dec-08 17:07:04.844 [Actor Thread 5] INFO  nextflow.processor.TaskProcessor - [c8/ac209c] Cached process > bigWig (ID2)
Dec-08 17:07:04.845 [Actor Thread 8] INFO  nextflow.processor.TaskProcessor - [bc/d9404d] Cached process > macs2 (ID2)
Dec-08 17:07:04.846 [Actor Thread 6] INFO  nextflow.processor.TaskProcessor - [b9/6a9c40] Cached process > bigWig (ID1)
Dec-08 17:07:04.847 [Actor Thread 11] INFO  nextflow.processor.TaskProcessor - [52/55bea8] Cached process > genrich (ID1)
Dec-08 17:07:04.849 [Actor Thread 3] INFO  nextflow.processor.TaskProcessor - [c9/fd0c3f] Cached process > getFragmentSize (ID1)
Dec-08 17:07:04.850 [Actor Thread 16] INFO  nextflow.processor.TaskProcessor - [93/404088] Cached process > macs2 (ID1)
Dec-08 17:07:04.852 [Actor Thread 9] INFO  nextflow.processor.TaskProcessor - [ce/296232] Cached process > genrich (ID2)
Dec-08 17:07:04.856 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name featureCounts
Dec-08 17:07:04.856 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name featureCounts
Dec-08 17:07:04.856 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.856 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.856 [Actor Thread 4] INFO  nextflow.processor.TaskProcessor - [18/254071] Cached process > getFragmentSize (ID2)
Dec-08 17:07:04.859 [Actor Thread 12] INFO  nextflow.processor.TaskProcessor - [98/3f9113] Cached process > macs2 (ID3)
Dec-08 17:07:04.872 [Actor Thread 18] INFO  nextflow.processor.TaskProcessor - [03/5aa479] Cached process > deepToolsComputeMatrix (ID3_NFR)
Dec-08 17:07:04.876 [Actor Thread 10] INFO  nextflow.processor.TaskProcessor - [df/f263c4] Cached process > prepareAnnotation
Dec-08 17:07:04.878 [main] DEBUG nextflow.processor.TaskProcessor - Creating *combiner* operator for each param(s) at index(es): [1]
Dec-08 17:07:04.885 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > featureCounts -- maxForks: 4; blocking: false
Dec-08 17:07:04.893 [Actor Thread 18] INFO  nextflow.processor.TaskProcessor - [45/8b1110] Cached process > deepToolsComputeMatrix (ID2_NUC)
Dec-08 17:07:04.916 [Actor Thread 14] INFO  nextflow.processor.TaskProcessor - [b3/6c0555] Cached process > deepToolsFingerprint
Dec-08 17:07:04.917 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name ReplicatesIDR
Dec-08 17:07:04.918 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name ReplicatesIDR
Dec-08 17:07:04.919 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.919 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.923 [Actor Thread 18] INFO  nextflow.processor.TaskProcessor - [93/d7851e] Cached process > deepToolsComputeMatrix (ID1_NUC)
Dec-08 17:07:04.927 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > ReplicatesIDR -- maxForks: 4; blocking: false
Dec-08 17:07:04.929 [Actor Thread 16] INFO  nextflow.processor.TaskProcessor - [4e/12fb4b] Cached process > deepToolsComputeMatrix (ID2_NFR)
Dec-08 17:07:04.929 [Actor Thread 12] INFO  nextflow.processor.TaskProcessor - [20/0f9e04] Cached process > deepToolsComputeMatrix (ID3_NUC)
Dec-08 17:07:04.947 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medCpu` matches label `medCpu` for process with name GroupsIDR
Dec-08 17:07:04.948 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:medMem` matches label `medMem` for process with name GroupsIDR
Dec-08 17:07:04.948 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.948 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.949 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > GroupsIDR -- maxForks: 4; blocking: false
Dec-08 17:07:04.971 [Actor Thread 6] INFO  nextflow.processor.TaskProcessor - [10/2065a3] Cached process > deepToolsComputeMatrix (ID1_NFR)
Dec-08 17:07:04.973 [Actor Thread 8] INFO  nextflow.processor.TaskProcessor - [e3/0da1f9] Cached process > featureCounts (2)
Dec-08 17:07:04.974 [Actor Thread 31] INFO  nextflow.processor.TaskProcessor - [8a/b824f7] Cached process > featureCounts (1)
Dec-08 17:07:04.983 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowCpu` matches label `lowCpu` for process with name getSoftwareVersions
Dec-08 17:07:04.983 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowMem` matches label `lowMem` for process with name getSoftwareVersions
Dec-08 17:07:04.983 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.983 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.984 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > getSoftwareVersions -- maxForks: 4; blocking: false
Dec-08 17:07:04.996 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:04.996 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:04.997 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > workflowSummaryMqc -- maxForks: 4; blocking: false
Dec-08 17:07:05.000 [Actor Thread 7] INFO  nextflow.processor.TaskProcessor - [34/3c308e] Cached process > workflowSummaryMqc
Dec-08 17:07:05.030 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowCpu` matches label `lowCpu` for process with name multiqc
Dec-08 17:07:05.030 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowMem` matches label `lowMem` for process with name multiqc
Dec-08 17:07:05.030 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:05.030 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:05.031 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > multiqc -- maxForks: 4; blocking: false
Dec-08 17:07:05.037 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowCpu` matches label `lowCpu` for process with name outputDocumentation
Dec-08 17:07:05.037 [main] DEBUG nextflow.script.ProcessConfig - Config settings `withLabel:lowMem` matches label `lowMem` for process with name outputDocumentation
Dec-08 17:07:05.037 [main] DEBUG nextflow.executor.ExecutorFactory - << taskConfig executor: null
Dec-08 17:07:05.037 [main] DEBUG nextflow.executor.ExecutorFactory - >> processorType: 'local'
Dec-08 17:07:05.038 [main] DEBUG nextflow.processor.TaskProcessor - Creating operator > outputDocumentation -- maxForks: 4; blocking: false
Dec-08 17:07:05.044 [main] DEBUG nextflow.script.ScriptRunner - > Await termination 
Dec-08 17:07:05.044 [main] DEBUG nextflow.Session - Session await
Dec-08 17:07:05.046 [Actor Thread 14] INFO  nextflow.processor.TaskProcessor - [ad/74d948] Cached process > outputDocumentation
Dec-08 17:07:05.055 [Task submitter] DEBUG nextflow.executor.LocalTaskHandler - Launch cmd line: /bin/bash -ue .command.run
Dec-08 17:07:05.062 [Task submitter] INFO  nextflow.Session - [63/c2498f] Submitted process > ReplicatesIDR (null IDR Replicates)
Dec-08 17:07:15.455 [Task monitor] DEBUG n.processor.TaskPollingMonitor - Task completed > TaskHandler[id: 60; name: ReplicatesIDR (null IDR Replicates); status: COMPLETED; exit: 1; error: -; workDir: /data/users/cbenoit/SAFIR_BREAST_LUNG/work/63/c2498fc0c8f96aa126c455e1085a97]
Dec-08 17:07:15.475 [Task submitter] DEBUG nextflow.executor.LocalTaskHandler - Launch cmd line: /bin/bash -ue .command.run
Dec-08 17:07:15.475 [Task submitter] INFO  nextflow.Session - [7b/a74a76] Submitted process > ReplicatesIDR (null IDR Replicates)
Dec-08 17:07:15.482 [Task monitor] ERROR nextflow.processor.TaskProcessor - Error executing process > 'ReplicatesIDR (null IDR Replicates)'

Caused by:
  Process `ReplicatesIDR (null IDR Replicates)` terminated with an error exit status (1)

Command executed:

  ####### Calculating IDR Across sample replicates ###################"
  selectedsamples=`/data/users/cbenoit/Documents/ATACseq/atac-seq/bin/select_peakfiles_for_IDR.py --caller Genrich --peakfiles ID1_Genrich_peaks.narrowPeak ID2_Genrich_peaks.narrowPeak`
  
  idr --samples $selectedsamples  --input-file-type narrowPeak --rank p.value --output-file mDC_Genrich.idr.txt --plot --log-output-file mDC.idr.log

Command exit status:
  1

Command output:
  /data/users/cbenoit/miniconda2/envs/atacseq/bin/idr --samples ['1' '2' '3' ... '51831' '51832' '51833'] ['1' '2' '3' ... '41520' '41521' '41522'] ID2_Genrich_peaks.narrowPeak ID1_Genrich_peaks.narrowPeak --input-file-type narrowPeak --rank p.value --output-file mDC_Genrich.idr.txt --plot --log-output-file mDC.idr.log

Command error:
  Traceback (most recent call last):
    File "/data/users/cbenoit/miniconda2/envs/atacseq/bin/idr", line 10, in <module>
      idr.idr.main()
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/site-packages/idr/idr.py", line 837, in main
      args = parse_args()
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/site-packages/idr/idr.py", line 627, in parse_args
      args = parser.parse_args()
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/argparse.py", line 1749, in parse_args
      args, argv = self.parse_known_args(args, namespace)
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/argparse.py", line 1781, in parse_known_args
      namespace, args = self._parse_known_args(args, namespace)
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/argparse.py", line 1987, in _parse_known_args
      start_index = consume_optional(start_index)
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/argparse.py", line 1927, in consume_optional
      take_action(action, args, option_string)
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/argparse.py", line 1839, in take_action
      argument_values = self._get_values(action, argument_strings)
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/argparse.py", line 2387, in _get_values
      value = [self._get_value(action, v) for v in arg_strings]
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/argparse.py", line 2387, in <listcomp>
      value = [self._get_value(action, v) for v in arg_strings]
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/argparse.py", line 2402, in _get_value
      result = type_func(arg_string)
    File "/data/users/cbenoit/miniconda2/envs/atacseq/lib/python3.7/site-packages/idr/idr.py", line 522, in PossiblyGzippedFile
      return open(fname, 'r')
  FileNotFoundError: [Errno 2] No such file or directory: "['1'"

Work dir:
  /data/users/cbenoit/SAFIR_BREAST_LUNG/work/63/c2498fc0c8f96aa126c455e1085a97

Tip: view the complete command output by changing to the process work dir and entering the command `cat .command.out`
Dec-08 17:07:15.489 [Task monitor] INFO  nextflow.Session - Execution cancelled -- Finishing pending tasks before exit
Dec-08 17:07:15.520 [main] DEBUG nextflow.Session - Session await > all process finished
Dec-08 17:07:20.981 [Task monitor] DEBUG n.processor.TaskPollingMonitor - Task completed > TaskHandler[id: 57; name: ReplicatesIDR (null IDR Replicates); status: COMPLETED; exit: 0; error: -; workDir: /data/users/cbenoit/SAFIR_BREAST_LUNG/work/7b/a74a76a89d09c4a0f7bf1a154a103a]
Dec-08 17:07:20.984 [Task monitor] DEBUG nextflow.processor.TaskProcessor - Process `ReplicatesIDR (null IDR Replicates)` is unable to find [UnixPath]: `/data/users/cbenoit/SAFIR_BREAST_LUNG/work/7b/a74a76a89d09c4a0f7bf1a154a103a/mDC_Macs2.idr.log` (pattern: `mDC_Macs2.idr.log`)
Dec-08 17:08:23.785 [SIGINT handler] DEBUG nextflow.Session - Session aborted -- Cause: SIGINT
Dec-08 17:08:23.825 [main] DEBUG nextflow.Session - Session await > all barriers passed
Dec-08 17:08:23.882 [main] INFO  nextflow.Nextflow - [ATAC-seq] FAILED: distracted_bassi
Dec-08 17:08:23.886 [main] DEBUG nextflow.trace.WorkflowStatsObserver - Workflow completed > WorkflowStats[succeededCount=0; failedCount=2; ignoredCount=0; cachedCount=46; pendingCount=3; submittedCount=0; runningCount=0; retriesCount=0; abortedCount=0; succeedDuration=0ms; failedDuration=1m 3s; cachedDuration=1h 51m 9s;loadCpus=0; loadMemory=0; peakRunning=1; peakCpus=4; peakMemory=8 GB; ]
Dec-08 17:08:23.886 [main] DEBUG nextflow.trace.TraceFileObserver - Flow completing -- flushing trace file
Dec-08 17:08:24.089 [main] DEBUG nextflow.trace.ReportObserver - Flow completing -- rendering html report
Dec-08 17:08:24.217 [main] DEBUG nextflow.trace.ReportObserver - Execution report summary data:
  [{"cpuUsage":{"mean":79.72,"min":69.93,"q1":77.1,"q2":84.28,"q3":84.61,"max":84.95,"minLabel":"bwaMem (ID2 on hg19)","maxLabel":"bwaMem (ID3 on hg19)","q1Label":"bwaMem (ID2 on hg19)","q2Label":"bwaMem (ID1 on hg19)","q3Label":"bwaMem (ID1 on hg19)"},"process":"bwaMem","mem":{"mean":6102058325.33,"min":6062141440,"q1":6080337920,"q2":6098534400,"q3":6122016768,"max":6145499136,"minLabel":"bwaMem (ID2 on hg19)","maxLabel":"bwaMem (ID3 on hg19)","q1Label":"bwaMem (ID2 on hg19)","q2Label":"bwaMem (ID1 on hg19)","q3Label":"bwaMem (ID1 on hg19)"},"memUsage":{"mean":71.04,"min":70.57,"q1":70.78,"q2":71,"q3":71.27,"max":71.54,"minLabel":"bwaMem (ID2 on hg19)","maxLabel":"bwaMem (ID3 on hg19)","q1Label":"bwaMem (ID2 on hg19)","q2Label":"bwaMem (ID1 on hg19)","q3Label":"bwaMem (ID1 on hg19)"},"timeUsage":{"mean":1.2,"min":0.99,"q1":1.13,"q2":1.27,"q3":1.31,"max":1.35,"minLabel":"bwaMem (ID1 on hg19)","maxLabel":"bwaMem (ID2 on hg19)","q1Label":"bwaMem (ID1 on hg19)","q2Label":"bwaMem (ID3 on hg19)","q3Label":"bwaMem (ID3 on hg19)"},"vmem":{"mean":6698164224,"min":6698102784,"q1":6698102784,"q2":6698102784,"q3":6698194944,"max":6698287104,"minLabel":"bwaMem (ID1 on hg19)","maxLabel":"bwaMem (ID2 on hg19)","q1Label":"bwaMem (ID1 on hg19)","q2Label":"bwaMem (ID3 on hg19)","q3Label":"bwaMem (ID3 on hg19)"},"reads":{"mean":7958856691,"min":7630264086,"q1":7863309934.5,"q2":8096355783,"q3":8123152993.5,"max":8149950204,"minLabel":"bwaMem (ID1 on hg19)","maxLabel":"bwaMem (ID2 on hg19)","q1Label":"bwaMem (ID1 on hg19)","q2Label":"bwaMem (ID3 on hg19)","q3Label":"bwaMem (ID3 on hg19)"},"cpu":{"mean":318.87,"min":279.7,"q1":308.4,"q2":337.1,"q3":338.45,"max":339.8,"minLabel":"bwaMem (ID2 on hg19)","maxLabel":"bwaMem (ID3 on hg19)","q1Label":"bwaMem (ID2 on hg19)","q2Label":"bwaMem (ID1 on hg19)","q3Label":"bwaMem (ID1 on hg19)"},"time":{"mean":86729.67,"min":71259,"q1":81471.5,"q2":91684,"q3":94465,"max":97246,"minLabel":"bwaMem (ID1 on hg19)","maxLabel":"bwaMem (ID2 on hg19)","q1Label":"bwaMem (ID1 on hg19)","q2Label":"bwaMem (ID3 on hg19)","q3Label":"bwaMem (ID3 on hg19)"},"writes":{"mean":1872768200,"min":1618130574,"q1":1802885294,"q2":1987640014,"q3":2000087013,"max":2012534012,"minLabel":"bwaMem (ID1 on hg19)","maxLabel":"bwaMem (ID2 on hg19)","q1Label":"bwaMem (ID1 on hg19)","q2Label":"bwaMem (ID3 on hg19)","q3Label":"bwaMem (ID3 on hg19)"}},{"cpuUsage":{"mean":11.2,"min":11.2,"q1":11.2,"q2":11.2,"q3":11.2,"max":11.2,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"},"process":"checkDesign","mem":{"mean":1261568,"min":1261568,"q1":1261568,"q2":1261568,"q3":1261568,"max":1261568,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"},"memUsage":{"mean":0.06,"min":0.06,"q1":0.06,"q2":0.06,"q3":0.06,"max":0.06,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"},"timeUsage":{"mean":0.01,"min":0.01,"q1":0.01,"q2":0.01,"q3":0.01,"max":0.01,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"},"vmem":{"mean":119652352,"min":119652352,"q1":119652352,"q2":119652352,"q3":119652352,"max":119652352,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"},"reads":{"mean":622674,"min":622674,"q1":622674,"q2":622674,"q3":622674,"max":622674,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"},"cpu":{"mean":11.2,"min":11.2,"q1":11.2,"q2":11.2,"q3":11.2,"max":11.2,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"},"time":{"mean":462,"min":462,"q1":462,"q2":462,"q3":462,"max":462,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"},"writes":{"mean":278,"min":278,"q1":278,"q2":278,"q3":278,"max":278,"minLabel":"checkDesign (design.csv)","maxLabel":"checkDesign (design.csv)","q1Label":"checkDesign (design.csv)","q2Label":"checkDesign (design.csv)","q3Label":"checkDesign (design.csv)"}},{"cpuUsage":{"mean":44.67,"min":28.7,"q1":38.94,"q2":49.18,"q3":52.65,"max":56.13,"minLabel":"fastQC (ID2)","maxLabel":"fastQC (ID3)","q1Label":"fastQC (ID2)","q2Label":"fastQC (ID1)","q3Label":"fastQC (ID1)"},"process":"fastQC","mem":{"mean":836846933.33,"min":818774016,"q1":826468352,"q2":834162688,"q3":845883392,"max":857604096,"minLabel":"fastQC (ID2)","maxLabel":"fastQC (ID1)","q1Label":"fastQC (ID2)","q2Label":"fastQC (ID3)","q3Label":"fastQC (ID3)"},"memUsage":{"mean":9.74,"min":9.53,"q1":9.62,"q2":9.71,"q3":9.85,"max":9.98,"minLabel":"fastQC (ID2)","maxLabel":"fastQC (ID1)","q1Label":"fastQC (ID2)","q2Label":"fastQC (ID3)","q3Label":"fastQC (ID3)"},"timeUsage":{"mean":0.16,"min":0.11,"q1":0.12,"q2":0.13,"q3":0.19,"max":0.25,"minLabel":"fastQC (ID3)","maxLabel":"fastQC (ID2)","q1Label":"fastQC (ID3)","q2Label":"fastQC (ID1)","q3Label":"fastQC (ID1)"},"vmem":{"mean":4374675456,"min":4374675456,"q1":4374675456,"q2":4374675456,"q3":4374675456,"max":4374675456,"minLabel":"fastQC (ID1)","maxLabel":"fastQC (ID3)","q1Label":"fastQC (ID1)","q2Label":"fastQC (ID2)","q3Label":"fastQC (ID2)"},"reads":{"mean":80126618,"min":73433004,"q1":77149166.5,"q2":80865329,"q3":83473425,"max":86081521,"minLabel":"fastQC (ID1)","maxLabel":"fastQC (ID2)","q1Label":"fastQC (ID1)","q2Label":"fastQC (ID3)","q3Label":"fastQC (ID3)"},"cpu":{"mean":178.67,"min":114.8,"q1":155.75,"q2":196.7,"q3":210.6,"max":224.5,"minLabel":"fastQC (ID2)","maxLabel":"fastQC (ID3)","q1Label":"fastQC (ID2)","q2Label":"fastQC (ID1)","q3Label":"fastQC (ID1)"},"time":{"mean":11622.33,"min":7925,"q1":8587.5,"q2":9250,"q3":13471,"max":17692,"minLabel":"fastQC (ID3)","maxLabel":"fastQC (ID2)","q1Label":"fastQC (ID3)","q2Label":"fastQC (ID1)","q3Label":"fastQC (ID1)"},"writes":{"mean":3625932,"min":3599645,"q1":3612381,"q2":3625117,"q3":3639075.5,"max":3653034,"minLabel":"fastQC (ID1)","maxLabel":"fastQC (ID3)","q1Label":"fastQC (ID1)","q2Label":"fastQC (ID2)","q3Label":"fastQC (ID2)"}},{"cpuUsage":{"mean":38.43,"min":38,"q1":38.08,"q2":38.15,"q3":38.65,"max":39.15,"minLabel":"bamSort (ID1)","maxLabel":"bamSort (ID3)","q1Label":"bamSort (ID1)","q2Label":"bamSort (ID2)","q3Label":"bamSort (ID2)"},"process":"bamSort","mem":{"mean":376037376,"min":324694016,"q1":362366976,"q2":400039936,"q3":401709056,"max":403378176,"minLabel":"bamSort (ID1)","maxLabel":"bamSort (ID2)","q1Label":"bamSort (ID1)","q2Label":"bamSort (ID3)","q3Label":"bamSort (ID3)"},"memUsage":{"mean":4.38,"min":3.78,"q1":4.22,"q2":4.66,"q3":4.68,"max":4.7,"minLabel":"bamSort (ID1)","maxLabel":"bamSort (ID2)","q1Label":"bamSort (ID1)","q2Label":"bamSort (ID3)","q3Label":"bamSort (ID3)"},"timeUsage":{"mean":0.1,"min":0.09,"q1":0.09,"q2":0.1,"q3":0.1,"max":0.11,"minLabel":"bamSort (ID1)","maxLabel":"bamSort (ID2)","q1Label":"bamSort (ID1)","q2Label":"bamSort (ID3)","q3Label":"bamSort (ID3)"},"vmem":{"mean":4134810965.33,"min":4106915840,"q1":4115204096,"q2":4123492352,"q3":4148758528,"max":4174024704,"minLabel":"bamSort (ID3)","maxLabel":"bamSort (ID1)","q1Label":"bamSort (ID3)","q2Label":"bamSort (ID2)","q3Label":"bamSort (ID2)"},"reads":{"mean":354649599.67,"min":328992977,"q1":341330400,"q2":353667823,"q3":367477911,"max":381287999,"minLabel":"bamSort (ID1)","maxLabel":"bamSort (ID2)","q1Label":"bamSort (ID1)","q2Label":"bamSort (ID3)","q3Label":"bamSort (ID3)"},"cpu":{"mean":153.73,"min":152,"q1":152.3,"q2":152.6,"q3":154.6,"max":156.6,"minLabel":"bamSort (ID1)","maxLabel":"bamSort (ID3)","q1Label":"bamSort (ID1)","q2Label":"bamSort (ID2)","q3Label":"bamSort (ID2)"},"time":{"mean":7120,"min":6534,"q1":6821.5,"q2":7109,"q3":7413,"max":7717,"minLabel":"bamSort (ID1)","maxLabel":"bamSort (ID2)","q1Label":"bamSort (ID1)","q2Label":"bamSort (ID3)","q3Label":"bamSort (ID3)"},"writes":{"mean":54117712,"min":51185925,"q1":52239538,"q2":53293151,"q3":55583605.5,"max":57874060,"minLabel":"bamSort (ID1)","maxLabel":"bamSort (ID2)","q1Label":"bamSort (ID1)","q2Label":"bamSort (ID3)","q3Label":"bamSort (ID3)"}},{"cpuUsage":{"mean":33.35,"min":31.5,"q1":32.26,"q2":33.03,"q3":34.28,"max":35.53,"minLabel":"markDuplicates (ID2)","maxLabel":"markDuplicates (ID1)","q1Label":"markDuplicates (ID2)","q2Label":"markDuplicates (ID3)","q3Label":"markDuplicates (ID3)"},"process":"markDuplicates","mem":{"mean":2218418176,"min":2144796672,"q1":2196629504,"q2":2248462336,"q3":2255228928,"max":2261995520,"minLabel":"markDuplicates (ID1)","maxLabel":"markDuplicates (ID2)","q1Label":"markDuplicates (ID1)","q2Label":"markDuplicates (ID3)","q3Label":"markDuplicates (ID3)"},"memUsage":{"mean":25.83,"min":24.97,"q1":25.57,"q2":26.18,"q3":26.25,"max":26.33,"minLabel":"markDuplicates (ID1)","maxLabel":"markDuplicates (ID2)","q1Label":"markDuplicates (ID1)","q2Label":"markDuplicates (ID3)","q3Label":"markDuplicates (ID3)"},"timeUsage":{"mean":0.42,"min":0.37,"q1":0.4,"q2":0.43,"q3":0.44,"max":0.46,"minLabel":"markDuplicates (ID1)","maxLabel":"markDuplicates (ID2)","q1Label":"markDuplicates (ID1)","q2Label":"markDuplicates (ID3)","q3Label":"markDuplicates (ID3)"},"vmem":{"mean":8059439786.67,"min":8013996032,"q1":8013996032,"q2":8013996032,"q3":8082161664,"max":8150327296,"minLabel":"markDuplicates (ID3)","maxLabel":"markDuplicates (ID2)","q1Label":"markDuplicates (ID3)","q2Label":"markDuplicates (ID1)","q3Label":"markDuplicates (ID1)"},"reads":{"mean":298780599.67,"min":283698746,"q1":288790266.5,"q2":293881787,"q3":306321526.5,"max":318761266,"minLabel":"markDuplicates (ID1)","maxLabel":"markDuplicates (ID2)","q1Label":"markDuplicates (ID1)","q2Label":"markDuplicates (ID3)","q3Label":"markDuplicates (ID3)"},"cpu":{"mean":133.4,"min":126,"q1":129.05,"q2":132.1,"q3":137.1,"max":142.1,"minLabel":"markDuplicates (ID2)","maxLabel":"markDuplicates (ID1)","q1Label":"markDuplicates (ID2)","q2Label":"markDuplicates (ID3)","q3Label":"markDuplicates (ID3)"},"time":{"mean":30286.67,"min":26909,"q1":28764,"q2":30619,"q3":31975.5,"max":33332,"minLabel":"markDuplicates (ID1)","maxLabel":"markDuplicates (ID2)","q1Label":"markDuplicates (ID1)","q2Label":"markDuplicates (ID3)","q3Label":"markDuplicates (ID3)"},"writes":{"mean":57091607,"min":53938330,"q1":55057010.5,"q2":56175691,"q3":58668245.5,"max":61160800,"minLabel":"markDuplicates (ID1)","maxLabel":"markDuplicates (ID2)","q1Label":"markDuplicates (ID1)","q2Label":"markDuplicates (ID3)","q3Label":"markDuplicates (ID3)"}},{"cpuUsage":{"mean":90.37,"min":90.2,"q1":90.25,"q2":90.3,"q3":90.45,"max":90.6,"minLabel":"preseq (ID1)","maxLabel":"preseq (ID2)","q1Label":"preseq (ID1)","q2Label":"preseq (ID3)","q3Label":"preseq (ID3)"},"process":"preseq","mem":{"mean":5641557.33,"min":5640192,"q1":5640192,"q2":5640192,"q3":5642240,"max":5644288,"minLabel":"preseq (ID2)","maxLabel":"preseq (ID3)","q1Label":"preseq (ID2)","q2Label":"preseq (ID1)","q3Label":"preseq (ID1)"},"memUsage":{"mean":0.07,"min":0.07,"q1":0.07,"q2":0.07,"q3":0.07,"max":0.07,"minLabel":"preseq (ID2)","maxLabel":"preseq (ID3)","q1Label":"preseq (ID2)","q2Label":"preseq (ID1)","q3Label":"preseq (ID1)"},"timeUsage":{"mean":0.24,"min":0.2,"q1":0.22,"q2":0.24,"q3":0.25,"max":0.26,"minLabel":"preseq (ID1)","maxLabel":"preseq (ID2)","q1Label":"preseq (ID1)","q2Label":"preseq (ID3)","q3Label":"preseq (ID3)"},"vmem":{"mean":302546944,"min":302546944,"q1":302546944,"q2":302546944,"q3":302546944,"max":302546944,"minLabel":"preseq (ID3)","maxLabel":"preseq (ID1)","q1Label":"preseq (ID3)","q2Label":"preseq (ID2)","q3Label":"preseq (ID2)"},"reads":{"mean":55040630.33,"min":51950514,"q1":52970994,"q2":53991474,"q3":56585688.5,"max":59179903,"minLabel":"preseq (ID1)","maxLabel":"preseq (ID2)","q1Label":"preseq (ID1)","q2Label":"preseq (ID3)","q3Label":"preseq (ID3)"},"cpu":{"mean":90.37,"min":90.2,"q1":90.25,"q2":90.3,"q3":90.45,"max":90.6,"minLabel":"preseq (ID1)","maxLabel":"preseq (ID2)","q1Label":"preseq (ID1)","q2Label":"preseq (ID3)","q3Label":"preseq (ID3)"},"time":{"mean":16921.67,"min":14751,"q1":16155,"q2":17559,"q3":18007,"max":18455,"minLabel":"preseq (ID1)","maxLabel":"preseq (ID2)","q1Label":"preseq (ID1)","q2Label":"preseq (ID3)","q3Label":"preseq (ID3)"},"writes":{"mean":400372.33,"min":400249,"q1":400287.5,"q2":400326,"q3":400434,"max":400542,"minLabel":"preseq (ID1)","maxLabel":"preseq (ID3)","q1Label":"preseq (ID1)","q2Label":"preseq (ID2)","q3Label":"preseq (ID2)"}},{"cpuUsage":{"mean":69.67,"min":64.1,"q1":67.9,"q2":71.7,"q3":72.45,"max":73.2,"minLabel":"bamFiltering (ID2)","maxLabel":"bamFiltering (ID3)","q1Label":"bamFiltering (ID2)","q2Label":"bamFiltering (ID1)","q3Label":"bamFiltering (ID1)"},"process":"bamFiltering","mem":{"mean":131641344,"min":100392960,"q1":121102336,"q2":141811712,"q3":147265536,"max":152719360,"minLabel":"bamFiltering (ID3)","maxLabel":"bamFiltering (ID1)","q1Label":"bamFiltering (ID3)","q2Label":"bamFiltering (ID2)","q3Label":"bamFiltering (ID2)"},"memUsage":{"mean":1.53,"min":1.17,"q1":1.41,"q2":1.65,"q3":1.71,"max":1.78,"minLabel":"bamFiltering (ID3)","maxLabel":"bamFiltering (ID1)","q1Label":"bamFiltering (ID3)","q2Label":"bamFiltering (ID2)","q3Label":"bamFiltering (ID2)"},"timeUsage":{"mean":0.15,"min":0.11,"q1":0.14,"q2":0.16,"q3":0.17,"max":0.17,"minLabel":"bamFiltering (ID3)","maxLabel":"bamFiltering (ID2)","q1Label":"bamFiltering (ID3)","q2Label":"bamFiltering (ID1)","q3Label":"bamFiltering (ID1)"},"vmem":{"mean":1095539370.67,"min":1092743168,"q1":1092743168,"q2":1092743168,"q3":1096937472,"max":1101131776,"minLabel":"bamFiltering (ID3)","maxLabel":"bamFiltering (ID1)","q1Label":"bamFiltering (ID3)","q2Label":"bamFiltering (ID2)","q3Label":"bamFiltering (ID2)"},"reads":{"mean":151121408.33,"min":130789425,"q1":144631344,"q2":158473263,"q3":161287400,"max":164101537,"minLabel":"bamFiltering (ID3)","maxLabel":"bamFiltering (ID1)","q1Label":"bamFiltering (ID3)","q2Label":"bamFiltering (ID2)","q3Label":"bamFiltering (ID2)"},"cpu":{"mean":69.67,"min":64.1,"q1":67.9,"q2":71.7,"q3":72.45,"max":73.2,"minLabel":"bamFiltering (ID2)","maxLabel":"bamFiltering (ID3)","q1Label":"bamFiltering (ID2)","q2Label":"bamFiltering (ID1)","q3Label":"bamFiltering (ID1)"},"time":{"mean":10555.67,"min":7722,"q1":9777.5,"q2":11833,"q3":11972.5,"max":12112,"minLabel":"bamFiltering (ID3)","maxLabel":"bamFiltering (ID2)","q1Label":"bamFiltering (ID3)","q2Label":"bamFiltering (ID1)","q3Label":"bamFiltering (ID1)"},"writes":{"mean":52242646.33,"min":39713130,"q1":47584504,"q2":55455878,"q3":58507404.5,"max":61558931,"minLabel":"bamFiltering (ID3)","maxLabel":"bamFiltering (ID1)","q1Label":"bamFiltering (ID3)","q2Label":"bamFiltering (ID2)","q3Label":"bamFiltering (ID2)"}},{"cpuUsage":{"mean":23.48,"min":21.08,"q1":22.41,"q2":23.75,"q3":24.69,"max":25.63,"minLabel":"readsShifting (ID1)","maxLabel":"readsShifting (ID3)","q1Label":"readsShifting (ID1)","q2Label":"readsShifting (ID2)","q3Label":"readsShifting (ID2)"},"process":"readsShifting","mem":{"mean":164095317.33,"min":163577856,"q1":163741696,"q2":163905536,"q3":164354048,"max":164802560,"minLabel":"readsShifting (ID2)","maxLabel":"readsShifting (ID3)","q1Label":"readsShifting (ID2)","q2Label":"readsShifting (ID1)","q3Label":"readsShifting (ID1)"},"memUsage":{"mean":1.91,"min":1.9,"q1":1.91,"q2":1.91,"q3":1.91,"max":1.92,"minLabel":"readsShifting (ID2)","maxLabel":"readsShifting (ID3)","q1Label":"readsShifting (ID2)","q2Label":"readsShifting (ID1)","q3Label":"readsShifting (ID1)"},"timeUsage":{"mean":0.88,"min":0.83,"q1":0.86,"q2":0.88,"q3":0.91,"max":0.93,"minLabel":"readsShifting (ID2)","maxLabel":"readsShifting (ID1)","q1Label":"readsShifting (ID2)","q2Label":"readsShifting (ID3)","q3Label":"readsShifting (ID3)"},"vmem":{"mean":1376321536,"min":1375875072,"q1":1376022528,"q2":1376169984,"q3":1376544768,"max":1376919552,"minLabel":"readsShifting (ID2)","maxLabel":"readsShifting (ID3)","q1Label":"readsShifting (ID2)","q2Label":"readsShifting (ID1)","q3Label":"readsShifting (ID1)"},"reads":{"mean":46909060418.33,"min":44715397497,"q1":44915400007,"q2":45115402517,"q3":48005891879,"max":50896381241,"minLabel":"readsShifting (ID2)","maxLabel":"readsShifting (ID3)","q1Label":"readsShifting (ID2)","q2Label":"readsShifting (ID1)","q3Label":"readsShifting (ID1)"},"cpu":{"mean":93.93,"min":84.3,"q1":89.65,"q2":95,"q3":98.75,"max":102.5,"minLabel":"readsShifting (ID1)","maxLabel":"readsShifting (ID3)","q1Label":"readsShifting (ID1)","q2Label":"readsShifting (ID2)","q3Label":"readsShifting (ID2)"},"time":{"mean":63608.33,"min":59906,"q1":61780,"q2":63654,"q3":65459.5,"max":67265,"minLabel":"readsShifting (ID2)","maxLabel":"readsShifting (ID1)","q1Label":"readsShifting (ID2)","q2Label":"readsShifting (ID3)","q3Label":"readsShifting (ID3)"},"writes":{"mean":257772863.67,"min":242573710,"q1":252701520,"q2":262829330,"q3":265372440.5,"max":267915551,"minLabel":"readsShifting (ID3)","maxLabel":"readsShifting (ID1)","q1Label":"readsShifting (ID3)","q2Label":"readsShifting (ID2)","q3Label":"readsShifting (ID2)"}},{"cpuUsage":{"mean":81.97,"min":76.3,"q1":77.1,"q2":77.9,"q3":84.8,"max":91.7,"minLabel":"getFragmentSize (ID2)","maxLabel":"getFragmentSize (ID1)","q1Label":"getFragmentSize (ID2)","q2Label":"getFragmentSize (ID3)","q3Label":"getFragmentSize (ID3)"},"process":"getFragmentSize","mem":{"mean":438594218.67,"min":398397440,"q1":427128832,"q2":455860224,"q3":458692608,"max":461524992,"minLabel":"getFragmentSize (ID3)","maxLabel":"getFragmentSize (ID2)","q1Label":"getFragmentSize (ID3)","q2Label":"getFragmentSize (ID1)","q3Label":"getFragmentSize (ID1)"},"memUsage":{"mean":5.11,"min":4.64,"q1":4.97,"q2":5.31,"q3":5.34,"max":5.37,"minLabel":"getFragmentSize (ID3)","maxLabel":"getFragmentSize (ID2)","q1Label":"getFragmentSize (ID3)","q2Label":"getFragmentSize (ID1)","q3Label":"getFragmentSize (ID1)"},"timeUsage":{"mean":0.15,"min":0.15,"q1":0.15,"q2":0.15,"q3":0.15,"max":0.15,"minLabel":"getFragmentSize (ID1)","maxLabel":"getFragmentSize (ID2)","q1Label":"getFragmentSize (ID1)","q2Label":"getFragmentSize (ID3)","q3Label":"getFragmentSize (ID3)"},"vmem":{"mean":4742257322.67,"min":4733689856,"q1":4738666496,"q2":4743643136,"q3":4746541056,"max":4749438976,"minLabel":"getFragmentSize (ID3)","maxLabel":"getFragmentSize (ID2)","q1Label":"getFragmentSize (ID3)","q2Label":"getFragmentSize (ID1)","q3Label":"getFragmentSize (ID1)"},"reads":{"mean":25142255.33,"min":23540096,"q1":24596103,"q2":25652110,"q3":25943335,"max":26234560,"minLabel":"getFragmentSize (ID3)","maxLabel":"getFragmentSize (ID1)","q1Label":"getFragmentSize (ID3)","q2Label":"getFragmentSize (ID2)","q3Label":"getFragmentSize (ID2)"},"cpu":{"mean":81.97,"min":76.3,"q1":77.1,"q2":77.9,"q3":84.8,"max":91.7,"minLabel":"getFragmentSize (ID2)","maxLabel":"getFragmentSize (ID1)","q1Label":"getFragmentSize (ID2)","q2Label":"getFragmentSize (ID3)","q3Label":"getFragmentSize (ID3)"},"time":{"mean":10678.33,"min":10661,"q1":10673,"q2":10685,"q3":10687,"max":10689,"minLabel":"getFragmentSize (ID1)","maxLabel":"getFragmentSize (ID2)","q1Label":"getFragmentSize (ID1)","q2Label":"getFragmentSize (ID3)","q3Label":"getFragmentSize (ID3)"},"writes":{"mean":56632249.67,"min":42055083,"q1":51799781,"q2":61544479,"q3":63920833,"max":66297187,"minLabel":"getFragmentSize (ID3)","maxLabel":"getFragmentSize (ID1)","q1Label":"getFragmentSize (ID3)","q2Label":"getFragmentSize (ID2)","q3Label":"getFragmentSize (ID2)"}},{"cpuUsage":{"mean":87.22,"min":85.98,"q1":86.71,"q2":87.45,"q3":87.85,"max":88.25,"minLabel":"bigWig (ID1)","maxLabel":"bigWig (ID2)","q1Label":"bigWig (ID1)","q2Label":"bigWig (ID3)","q3Label":"bigWig (ID3)"},"process":"bigWig","mem":{"mean":160626005.33,"min":159805440,"q1":160245760,"q2":160686080,"q3":161036288,"max":161386496,"minLabel":"bigWig (ID1)","maxLabel":"bigWig (ID2)","q1Label":"bigWig (ID1)","q2Label":"bigWig (ID3)","q3Label":"bigWig (ID3)"},"memUsage":{"mean":1.87,"min":1.86,"q1":1.87,"q2":1.87,"q3":1.87,"max":1.88,"minLabel":"bigWig (ID1)","maxLabel":"bigWig (ID2)","q1Label":"bigWig (ID1)","q2Label":"bigWig (ID3)","q3Label":"bigWig (ID3)"},"timeUsage":{"mean":1.12,"min":1.1,"q1":1.1,"q2":1.1,"q3":1.12,"max":1.15,"minLabel":"bigWig (ID3)","maxLabel":"bigWig (ID1)","q1Label":"bigWig (ID3)","q2Label":"bigWig (ID2)","q3Label":"bigWig (ID2)"},"vmem":{"mean":1398474069.33,"min":1375375360,"q1":1376208896,"q2":1377042432,"q3":1410023424,"max":1443004416,"minLabel":"bigWig (ID1)","maxLabel":"bigWig (ID3)","q1Label":"bigWig (ID1)","q2Label":"bigWig (ID2)","q3Label":"bigWig (ID2)"},"reads":{"mean":3702746393.67,"min":3486384850,"q1":3497388781.5,"q2":3508392713,"q3":3810927165.5,"max":4113461618,"minLabel":"bigWig (ID2)","maxLabel":"bigWig (ID3)","q1Label":"bigWig (ID2)","q2Label":"bigWig (ID1)","q3Label":"bigWig (ID1)"},"cpu":{"mean":348.9,"min":343.9,"q1":346.85,"q2":349.8,"q3":351.4,"max":353,"minLabel":"bigWig (ID1)","maxLabel":"bigWig (ID2)","q1Label":"bigWig (ID1)","q2Label":"bigWig (ID3)","q3Label":"bigWig (ID3)"},"time":{"mean":80285.67,"min":79005,"q1":79102.5,"q2":79200,"q3":80926,"max":82652,"minLabel":"bigWig (ID3)","maxLabel":"bigWig (ID1)","q1Label":"bigWig (ID3)","q2Label":"bigWig (ID2)","q3Label":"bigWig (ID2)"},"writes":{"mean":15912433.33,"min":13988134,"q1":15220820,"q2":16453506,"q3":16874583,"max":17295660,"minLabel":"bigWig (ID2)","maxLabel":"bigWig (ID1)","q1Label":"bigWig (ID2)","q2Label":"bigWig (ID3)","q3Label":"bigWig (ID3)"}},{"cpuUsage":{"mean":26.59,"min":25.93,"q1":26.39,"q2":26.85,"q3":26.93,"max":27,"minLabel":"genrich (ID3)","maxLabel":"genrich (ID1)","q1Label":"genrich (ID3)","q2Label":"genrich (ID2)","q3Label":"genrich (ID2)"},"process":"genrich","mem":{"mean":9210882730.67,"min":9153732608,"q1":9158793216,"q2":9163853824,"q3":9239457792,"max":9315061760,"minLabel":"genrich (ID2)","maxLabel":"genrich (ID3)","q1Label":"genrich (ID2)","q2Label":"genrich (ID1)","q3Label":"genrich (ID1)"},"memUsage":{"mean":107.23,"min":106.56,"q1":106.62,"q2":106.68,"q3":107.56,"max":108.44,"minLabel":"genrich (ID2)","maxLabel":"genrich (ID3)","q1Label":"genrich (ID2)","q2Label":"genrich (ID1)","q3Label":"genrich (ID1)"},"timeUsage":{"mean":0.34,"min":0.33,"q1":0.34,"q2":0.34,"q3":0.35,"max":0.35,"minLabel":"genrich (ID3)","maxLabel":"genrich (ID1)","q1Label":"genrich (ID3)","q2Label":"genrich (ID2)","q3Label":"genrich (ID2)"},"vmem":{"mean":9332316842.67,"min":9275195392,"q1":9280233472,"q2":9285271552,"q3":9360877568,"max":9436483584,"minLabel":"genrich (ID2)","maxLabel":"genrich (ID3)","q1Label":"genrich (ID2)","q2Label":"genrich (ID1)","q3Label":"genrich (ID1)"},"reads":{"mean":71677316.67,"min":58701860,"q1":66491733,"q2":74281606,"q3":78165045,"max":82048484,"minLabel":"genrich (ID3)","maxLabel":"genrich (ID1)","q1Label":"genrich (ID3)","q2Label":"genrich (ID2)","q3Label":"genrich (ID2)"},"cpu":{"mean":106.37,"min":103.7,"q1":105.55,"q2":107.4,"q3":107.7,"max":108,"minLabel":"genrich (ID3)","maxLabel":"genrich (ID1)","q1Label":"genrich (ID3)","q2Label":"genrich (ID2)","q3Label":"genrich (ID2)"},"time":{"mean":24544.67,"min":23933,"q1":24130,"q2":24327,"q3":24850.5,"max":25374,"minLabel":"genrich (ID3)","maxLabel":"genrich (ID1)","q1Label":"genrich (ID3)","q2Label":"genrich (ID2)","q3Label":"genrich (ID2)"},"writes":{"mean":55077527,"min":44830505,"q1":51042857.5,"q2":57255210,"q3":60201038,"max":63146866,"minLabel":"genrich (ID3)","maxLabel":"genrich (ID1)","q1Label":"genrich (ID3)","q2Label":"genrich (ID2)","q3Label":"genrich (ID2)"}},{"cpuUsage":{"mean":23.26,"min":20.93,"q1":21.05,"q2":21.18,"q3":24.43,"max":27.68,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID2)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID1)","q3Label":"macs2 (ID1)"},"process":"macs2","mem":{"mean":96152234.67,"min":85450752,"q1":91494400,"q2":97538048,"q3":101502976,"max":105467904,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID1)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID2)","q3Label":"macs2 (ID2)"},"memUsage":{"mean":1.12,"min":0.99,"q1":1.07,"q2":1.14,"q3":1.18,"max":1.23,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID1)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID2)","q3Label":"macs2 (ID2)"},"timeUsage":{"mean":0.12,"min":0.1,"q1":0.1,"q2":0.11,"q3":0.13,"max":0.15,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID1)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID2)","q3Label":"macs2 (ID2)"},"vmem":{"mean":549205333.33,"min":530976768,"q1":543496192,"q2":556015616,"q3":558319616,"max":560623616,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID1)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID2)","q3Label":"macs2 (ID2)"},"reads":{"mean":73279644,"min":57346356,"q1":67612180,"q2":77878004,"q3":81246288,"max":84614572,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID1)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID2)","q3Label":"macs2 (ID2)"},"cpu":{"mean":93.03,"min":83.7,"q1":84.2,"q2":84.7,"q3":97.7,"max":110.7,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID2)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID1)","q3Label":"macs2 (ID1)"},"time":{"mean":8447.67,"min":6865,"q1":7284.5,"q2":7704,"q3":9239,"max":10774,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID1)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID2)","q3Label":"macs2 (ID2)"},"writes":{"mean":88680560.67,"min":69520400,"q1":81485447,"q2":93450494,"q3":98260641,"max":103070788,"minLabel":"macs2 (ID3)","maxLabel":"macs2 (ID1)","q1Label":"macs2 (ID3)","q2Label":"macs2 (ID2)","q3Label":"macs2 (ID2)"}},{"cpuUsage":{"mean":85.36,"min":71.68,"q1":84.98,"q2":88.14,"q3":89.49,"max":90.35,"minLabel":"deepToolsComputeMatrix (ID3_NFR)","maxLabel":"deepToolsComputeMatrix (ID3_NUC)","q1Label":"deepToolsComputeMatrix (ID1_NFR)","q2Label":"deepToolsComputeMatrix (ID2_NFR)","q3Label":"deepToolsComputeMatrix (ID2_NUC)"},"process":"deepToolsComputeMatrix","mem":{"mean":347990698.67,"min":343351296,"q1":344604672,"q2":348184576,"q3":350756864,"max":353198080,"minLabel":"deepToolsComputeMatrix (ID2_NUC)","maxLabel":"deepToolsComputeMatrix (ID3_NFR)","q1Label":"deepToolsComputeMatrix (ID2_NFR)","q2Label":"deepToolsComputeMatrix (ID1_NUC)","q3Label":"deepToolsComputeMatrix (ID3_NUC)"},"memUsage":{"mean":4.05,"min":4,"q1":4.01,"q2":4.05,"q3":4.08,"max":4.11,"minLabel":"deepToolsComputeMatrix (ID2_NUC)","maxLabel":"deepToolsComputeMatrix (ID3_NFR)","q1Label":"deepToolsComputeMatrix (ID2_NFR)","q2Label":"deepToolsComputeMatrix (ID1_NUC)","q3Label":"deepToolsComputeMatrix (ID3_NUC)"},"timeUsage":{"mean":1.44,"min":1.36,"q1":1.38,"q2":1.42,"q3":1.46,"max":1.6,"minLabel":"deepToolsComputeMatrix (ID3_NUC)","maxLabel":"deepToolsComputeMatrix (ID3_NFR)","q1Label":"deepToolsComputeMatrix (ID1_NUC)","q2Label":"deepToolsComputeMatrix (ID2_NFR)","q3Label":"deepToolsComputeMatrix (ID2_NUC)"},"vmem":{"mean":1546593621.33,"min":1534668800,"q1":1535917056,"q2":1537816576,"q3":1539513344,"max":1593896960,"minLabel":"deepToolsComputeMatrix (ID2_NFR)","maxLabel":"deepToolsComputeMatrix (ID3_NFR)","q1Label":"deepToolsComputeMatrix (ID2_NUC)","q2Label":"deepToolsComputeMatrix (ID3_NUC)","q3Label":"deepToolsComputeMatrix (ID1_NFR)"},"reads":{"mean":593517315.17,"min":565244117,"q1":574075478,"q2":593824616,"q3":613555540.25,"max":620585595,"minLabel":"deepToolsComputeMatrix (ID2_NUC)","maxLabel":"deepToolsComputeMatrix (ID3_NFR)","q1Label":"deepToolsComputeMatrix (ID3_NUC)","q2Label":"deepToolsComputeMatrix (ID1_NUC)","q3Label":"deepToolsComputeMatrix (ID2_NFR)"},"cpu":{"mean":341.45,"min":286.7,"q1":339.93,"q2":352.55,"q3":357.98,"max":361.4,"minLabel":"deepToolsComputeMatrix (ID3_NFR)","maxLabel":"deepToolsComputeMatrix (ID3_NUC)","q1Label":"deepToolsComputeMatrix (ID1_NFR)","q2Label":"deepToolsComputeMatrix (ID2_NFR)","q3Label":"deepToolsComputeMatrix (ID2_NUC)"},"time":{"mean":103602.17,"min":98079,"q1":99511.5,"q2":102141.5,"q3":104789.5,"max":114944,"minLabel":"deepToolsComputeMatrix (ID3_NUC)","maxLabel":"deepToolsComputeMatrix (ID3_NFR)","q1Label":"deepToolsComputeMatrix (ID1_NUC)","q2Label":"deepToolsComputeMatrix (ID2_NFR)","q3Label":"deepToolsComputeMatrix (ID2_NUC)"},"writes":{"mean":39091341.33,"min":38933517,"q1":39051228.75,"q2":39090266,"q3":39166867,"max":39203382,"minLabel":"deepToolsComputeMatrix (ID3_NUC)","maxLabel":"deepToolsComputeMatrix (ID2_NUC)","q1Label":"deepToolsComputeMatrix (ID2_NFR)","q2Label":"deepToolsComputeMatrix (ID3_NFR)","q3Label":"deepToolsComputeMatrix (ID1_NFR)"}},{"cpuUsage":{"mean":76.1,"min":76.1,"q1":76.1,"q2":76.1,"q3":76.1,"max":76.1,"minLabel":"prepareAnnotation","maxLabel":"prepareAnnotation","q1Label":"prepareAnnotation","q2Label":"prepareAnnotation","q3Label":"prepareAnnotation"},"process":"prepareAnnotation","mem":{"mean":1253376,"min":1253376,"q1":1253376,"q2":1253376,"q3":1253376,"max":1253376,"minLabel":"prepareAnnotation","maxLabel":"prepareAnnotation","q1Label":"prepareAnnotation","q2Label":"prepareAnnotation","q3Label":"prepareAnnotation"},"memUsage":{"mean":0.06,"min":0.06,"q1":0.06,"q2":0.06,"q3":0.06,"max":0.06,"minLabel":"prepareAnnotation","maxLabel":"prepareAnnotation","q1Label":"prepareAnnotation","q2Label":"prepareAnnotation","q3Label":"prepareAnnotation"},"timeUsage":null,"vmem":{"mean":115904512,"min":115904512,"q1":115904512,"q2":115904512,"q3":115904512,"max":115904512,"minLabel":"prepareAnnotation","maxLabel":"prepareAnnotation","q1Label":"prepareAnnotation","q2Label":"prepareAnnotation","q3Label":"prepareAnnotation"},"reads":{"mean":759202,"min":759202,"q1":759202,"q2":759202,"q3":759202,"max":759202,"minLabel":"prepareAnnotation","maxLabel":"prepareAnnotation","q1Label":"prepareAnnotation","q2Label":"prepareAnnotation","q3Label":"prepareAnnotation"},"cpu":{"mean":76.1,"min":76.1,"q1":76.1,"q2":76.1,"q3":76.1,"max":76.1,"minLabel":"prepareAnnotation","maxLabel":"prepareAnnotation","q1Label":"prepareAnnotation","q2Label":"prepareAnnotation","q3Label":"prepareAnnotation"},"time":{"mean":78,"min":78,"q1":78,"q2":78,"q3":78,"max":78,"minLabel":"prepareAnnotation","maxLabel":"prepareAnnotation","q1Label":"prepareAnnotation","q2Label":"prepareAnnotation","q3Label":"prepareAnnotation"},"writes":{"mean":704902,"min":704902,"q1":704902,"q2":704902,"q3":704902,"max":704902,"minLabel":"prepareAnnotation","maxLabel":"prepareAnnotation","q1Label":"prepareAnnotation","q2Label":"prepareAnnotation","q3Label":"prepareAnnotation"}},{"cpuUsage":{"mean":32.05,"min":32.05,"q1":32.05,"q2":32.05,"q3":32.05,"max":32.05,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"},"process":"deepToolsFingerprint","mem":{"mean":1207918592,"min":1207918592,"q1":1207918592,"q2":1207918592,"q3":1207918592,"max":1207918592,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"},"memUsage":{"mean":14.06,"min":14.06,"q1":14.06,"q2":14.06,"q3":14.06,"max":14.06,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"},"timeUsage":{"mean":1.04,"min":1.04,"q1":1.04,"q2":1.04,"q3":1.04,"max":1.04,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"},"vmem":{"mean":1847369728,"min":1847369728,"q1":1847369728,"q2":1847369728,"q3":1847369728,"max":1847369728,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"},"reads":{"mean":1576859855,"min":1576859855,"q1":1576859855,"q2":1576859855,"q3":1576859855,"max":1576859855,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"},"cpu":{"mean":128.2,"min":128.2,"q1":128.2,"q2":128.2,"q3":128.2,"max":128.2,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"},"time":{"mean":74968,"min":74968,"q1":74968,"q2":74968,"q3":74968,"max":74968,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"},"writes":{"mean":12627894,"min":12627894,"q1":12627894,"q2":12627894,"q3":12627894,"max":12627894,"minLabel":"deepToolsFingerprint","maxLabel":"deepToolsFingerprint","q1Label":"deepToolsFingerprint","q2Label":"deepToolsFingerprint","q3Label":"deepToolsFingerprint"}},{"cpuUsage":{"mean":18.7,"min":17.43,"q1":18.06,"q2":18.7,"q3":19.34,"max":19.98,"minLabel":"featureCounts (2)","maxLabel":"featureCounts (1)","q1Label":"featureCounts (2)","q2Label":"featureCounts (2)","q3Label":"featureCounts (2)"},"process":"featureCounts","mem":{"mean":19546112,"min":19546112,"q1":19546112,"q2":19546112,"q3":19546112,"max":19546112,"minLabel":"featureCounts (1)","maxLabel":"featureCounts (2)","q1Label":"featureCounts (1)","q2Label":"featureCounts (1)","q3Label":"featureCounts (1)"},"memUsage":{"mean":0.23,"min":0.23,"q1":0.23,"q2":0.23,"q3":0.23,"max":0.23,"minLabel":"featureCounts (1)","maxLabel":"featureCounts (2)","q1Label":"featureCounts (1)","q2Label":"featureCounts (1)","q3Label":"featureCounts (1)"},"timeUsage":{"mean":0.02,"min":0.02,"q1":0.02,"q2":0.02,"q3":0.02,"max":0.03,"minLabel":"featureCounts (1)","maxLabel":"featureCounts (2)","q1Label":"featureCounts (1)","q2Label":"featureCounts (1)","q3Label":"featureCounts (1)"},"vmem":{"mean":697268224,"min":665874432,"q1":681571328,"q2":697268224,"q3":712965120,"max":728662016,"minLabel":"featureCounts (1)","maxLabel":"featureCounts (2)","q1Label":"featureCounts (1)","q2Label":"featureCounts (1)","q3Label":"featureCounts (1)"},"reads":{"mean":21476328,"min":21476296,"q1":21476312,"q2":21476328,"q3":21476344,"max":21476360,"minLabel":"featureCounts (1)","maxLabel":"featureCounts (2)","q1Label":"featureCounts (1)","q2Label":"featureCounts (1)","q3Label":"featureCounts (1)"},"cpu":{"mean":74.8,"min":69.7,"q1":72.25,"q2":74.8,"q3":77.35,"max":79.9,"minLabel":"featureCounts (2)","maxLabel":"featureCounts (1)","q1Label":"featureCounts (2)","q2Label":"featureCounts (2)","q3Label":"featureCounts (2)"},"time":{"mean":1737,"min":1620,"q1":1678.5,"q2":1737,"q3":1795.5,"max":1854,"minLabel":"featureCounts (1)","maxLabel":"featureCounts (2)","q1Label":"featureCounts (1)","q2Label":"featureCounts (1)","q3Label":"featureCounts (1)"},"writes":{"mean":1570967.5,"min":1561635,"q1":1566301.25,"q2":1570967.5,"q3":1575633.75,"max":1580300,"minLabel":"featureCounts (2)","maxLabel":"featureCounts (1)","q1Label":"featureCounts (2)","q2Label":"featureCounts (2)","q3Label":"featureCounts (2)"}},{"cpuUsage":null,"process":"workflowSummaryMqc","mem":null,"memUsage":null,"timeUsage":null,"vmem":null,"reads":null,"cpu":null,"time":{"mean":2,"min":2,"q1":2,"q2":2,"q3":2,"max":2,"minLabel":"workflowSummaryMqc","maxLabel":"workflowSummaryMqc","q1Label":"workflowSummaryMqc","q2Label":"workflowSummaryMqc","q3Label":"workflowSummaryMqc"},"writes":null},{"cpuUsage":{"mean":11.1,"min":11.1,"q1":11.1,"q2":11.1,"q3":11.1,"max":11.1,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"},"process":"outputDocumentation","mem":{"mean":21737472,"min":21737472,"q1":21737472,"q2":21737472,"q3":21737472,"max":21737472,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"},"memUsage":{"mean":1.01,"min":1.01,"q1":1.01,"q2":1.01,"q3":1.01,"max":1.01,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"},"timeUsage":{"mean":0.03,"min":0.03,"q1":0.03,"q2":0.03,"q3":0.03,"max":0.03,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"},"vmem":{"mean":263954432,"min":263954432,"q1":263954432,"q2":263954432,"q3":263954432,"max":263954432,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"},"reads":{"mean":2986906,"min":2986906,"q1":2986906,"q2":2986906,"q3":2986906,"max":2986906,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"},"cpu":{"mean":11.1,"min":11.1,"q1":11.1,"q2":11.1,"q3":11.1,"max":11.1,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"},"time":{"mean":2295,"min":2295,"q1":2295,"q2":2295,"q3":2295,"max":2295,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"},"writes":{"mean":1002015,"min":1002015,"q1":1002015,"q2":1002015,"q3":1002015,"max":1002015,"minLabel":"outputDocumentation","maxLabel":"outputDocumentation","q1Label":"outputDocumentation","q2Label":"outputDocumentation","q3Label":"outputDocumentation"}},{"cpuUsage":{"mean":25.85,"min":25.85,"q1":25.85,"q2":25.85,"q3":25.85,"max":25.85,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"},"process":"ReplicatesIDR","mem":{"mean":70852608,"min":70852608,"q1":70852608,"q2":70852608,"q3":70852608,"max":70852608,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"},"memUsage":{"mean":0.82,"min":0.82,"q1":0.82,"q2":0.82,"q3":0.82,"max":0.82,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"},"timeUsage":{"mean":0.11,"min":0.07,"q1":0.09,"q2":0.11,"q3":0.13,"max":0.14,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"},"vmem":{"mean":540061696,"min":540061696,"q1":540061696,"q2":540061696,"q3":540061696,"max":540061696,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"},"reads":{"mean":55140754,"min":55140754,"q1":55140754,"q2":55140754,"q3":55140754,"max":55140754,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"},"cpu":{"mean":103.4,"min":103.4,"q1":103.4,"q2":103.4,"q3":103.4,"max":103.4,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"},"time":{"mean":7820,"min":5285,"q1":6552.5,"q2":7820,"q3":9087.5,"max":10355,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"},"writes":{"mean":456179,"min":456179,"q1":456179,"q2":456179,"q3":456179,"max":456179,"minLabel":"ReplicatesIDR (null IDR Replicates)","maxLabel":"ReplicatesIDR (null IDR Replicates)","q1Label":"ReplicatesIDR (null IDR Replicates)","q2Label":"ReplicatesIDR (null IDR Replicates)","q3Label":"ReplicatesIDR (null IDR Replicates)"}}]
Dec-08 17:08:25.166 [main] DEBUG nextflow.trace.TimelineObserver - Flow completing -- rendering html timeline
Dec-08 17:08:25.777 [main] DEBUG nextflow.CacheDB - Closing CacheDB done
Dec-08 17:08:25.803 [main] DEBUG nextflow.script.ScriptRunner - > Execution complete -- Goodbye
