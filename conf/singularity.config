def checkProfileSingularity(path){
  if (new File(path).exists()){
    File directory = new File(path)
    def contents = []
    directory.eachFileRecurse (groovy.io.FileType.FILES) { file -> contents << file }
    if (!path?.trim() || contents == null || contents.size() == 0){
      println "### ERROR ### The option '-profile singularity' requires the singularity images to be installed on your system. See --singularityImagePath for advanced usage."
      System.exit(-1)
    }
  }else{
    println "### ERROR ### Singularity image path [${path}] not found with. See --singularityImagePath for advanced usage."
    System.exit(-1)
  }
}

singularity {
  enabled = true
  autoMounts = true
  runOptions = "${params.geniac.containers.singularityRunOptions}"
}

process {
  checkProfileSingularity("${params.geniac.singularityImagePath}")
  withLabel:python { container = "${params.singularityImagePath}/python-3.7.1.simg" }
  withLabel:fastqc { container = "${params.singularityImagePath}/fastqc-0.11.8.simg" }
  withLabel:bwa { container = "${params.singularityImagePath}/bwa0-7-17.simg" }
  withLabel:bowtie2 { container = "${params.singularityImagePath}/bowtie2-2.3.5.simg" } 
  withLabel:samtools { container = "${params.singularityImagePath}/samtools-1.9.simg" } 
  withLabel:picard { container = "${params.singularityImagePath}/picard-2.19.0.simg" } 
  withLabel:preseq { container = "${params.singularityImagePath}/preseq-2.0.3.simg" } 
  withLabel:r { container = "${params.singularityImagePath}/r-atac.simg" } 
  withLabel:deeptools { container = "${params.singularityImagePath}/deeptools-3.2.1.simg" } 
  withLabel:macs2 { container = "${params.singularityImagePath}/macs2-2.2.6.simg" } 
  withLabel:genrich { container = "${params.singularityImagePath}/genrich-2.17.1.simg" }
  withLabel:homer { container = "${params.singularityImagePath}/homer-4.10.simg" }
  withLabel:bedtobigbed { container = "${params.singularityImagePath}/bedtobigbed-377.simg" } 
  withLabel:multiqc { container = "${params.singularityImagePath}/multiqc-1.9.simg" } 
}